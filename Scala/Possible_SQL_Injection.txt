/*
    Search for the use of Splicing Literal Values in the slick library
*/

// Find all imports
CxList imports = All.FindByType(typeof(Import));

// Search by name to see if slick is in the imports
CxList slick = imports.FindByShortName("slick");

// Some flag indicating that the library import is present in the code
// For more accurate determination, you can use the file name approach
bool not_empty_list = false;
foreach (CxList r in slick)
{
    // If we encounter an import, we consider that slick is used
	not_empty_list = true;
}

if (not_empty_list) {
    // Search for calls that pass an SQL string
	CxList sql = All.FindByShortName("sql");
	sql.Add(All.FindByShortName("sqlu"));
	
	// Determine the data that gets into these calls
	CxList data_sql = All.DataInfluencingOn(sql);
	
	// Since syntax is not supported, you can use the regular expressions approach
	// RegExp should be used very carefully and not applied to a large amount of data, as this can greatly affect performance
	CxList find_possible_inj = data_sql.FindByRegex(@"\#\$", true, true, true);

    // Get rid of false positives, if any, and output the result
	result = find_possible_inj.FindByType(typeof(BinaryExpr));
}